// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package it.phrasebook.domain;

import it.phrasebook.domain.Editore;
import it.phrasebook.domain.Libro;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Libro_Roo_Finder {
    
    public static TypedQuery<Libro> Libro.findLibroesByEditore(Editore editore) {
        if (editore == null) throw new IllegalArgumentException("The editore argument is required");
        EntityManager em = Libro.entityManager();
        TypedQuery<Libro> q = em.createQuery("SELECT o FROM Libro AS o WHERE o.editore = :editore", Libro.class);
        q.setParameter("editore", editore);
        return q;
    }
    
    public static TypedQuery<Libro> Libro.findLibroesByIsbnEquals(String isbn) {
        if (isbn == null || isbn.length() == 0) throw new IllegalArgumentException("The isbn argument is required");
        EntityManager em = Libro.entityManager();
        TypedQuery<Libro> q = em.createQuery("SELECT o FROM Libro AS o WHERE o.isbn = :isbn", Libro.class);
        q.setParameter("isbn", isbn);
        return q;
    }
    
    public static TypedQuery<Libro> Libro.findLibroesByTitoloLike(String titolo) {
        if (titolo == null || titolo.length() == 0) throw new IllegalArgumentException("The titolo argument is required");
        titolo = titolo.replace('*', '%');
        if (titolo.charAt(0) != '%') {
            titolo = "%" + titolo;
        }
        if (titolo.charAt(titolo.length() - 1) != '%') {
            titolo = titolo + "%";
        }
        EntityManager em = Libro.entityManager();
        TypedQuery<Libro> q = em.createQuery("SELECT o FROM Libro AS o WHERE LOWER(o.titolo) LIKE LOWER(:titolo)", Libro.class);
        q.setParameter("titolo", titolo);
        return q;
    }
    
}
