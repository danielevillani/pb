// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package it.phrasebook.domain;

import it.phrasebook.domain.Contatto;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Contatto_Roo_Finder {
    
    public static TypedQuery<Contatto> Contatto.findContattoesByCognomeLike(String cognome) {
        if (cognome == null || cognome.length() == 0) throw new IllegalArgumentException("The cognome argument is required");
        cognome = cognome.replace('*', '%');
        if (cognome.charAt(0) != '%') {
            cognome = "%" + cognome;
        }
        if (cognome.charAt(cognome.length() - 1) != '%') {
            cognome = cognome + "%";
        }
        EntityManager em = Contatto.entityManager();
        TypedQuery<Contatto> q = em.createQuery("SELECT o FROM Contatto AS o WHERE LOWER(o.cognome) LIKE LOWER(:cognome)", Contatto.class);
        q.setParameter("cognome", cognome);
        return q;
    }
    
    public static TypedQuery<Contatto> Contatto.findContattoesByNomeLike(String nome) {
        if (nome == null || nome.length() == 0) throw new IllegalArgumentException("The nome argument is required");
        nome = nome.replace('*', '%');
        if (nome.charAt(0) != '%') {
            nome = "%" + nome;
        }
        if (nome.charAt(nome.length() - 1) != '%') {
            nome = nome + "%";
        }
        EntityManager em = Contatto.entityManager();
        TypedQuery<Contatto> q = em.createQuery("SELECT o FROM Contatto AS o WHERE LOWER(o.nome) LIKE LOWER(:nome)", Contatto.class);
        q.setParameter("nome", nome);
        return q;
    }
    
    public static TypedQuery<Contatto> Contatto.findContattoesByTelefonoEquals(String telefono) {
        if (telefono == null || telefono.length() == 0) throw new IllegalArgumentException("The telefono argument is required");
        EntityManager em = Contatto.entityManager();
        TypedQuery<Contatto> q = em.createQuery("SELECT o FROM Contatto AS o WHERE o.telefono = :telefono", Contatto.class);
        q.setParameter("telefono", telefono);
        return q;
    }
    
}
