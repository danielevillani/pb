// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package it.phrasebook.domain;

import it.phrasebook.domain.RichiestaAcquisto;
import java.util.List;
import org.springframework.transaction.annotation.Transactional;

privileged aspect RichiestaAcquisto_Roo_Jpa_ActiveRecord {
    
    public static long RichiestaAcquisto.countRichiestaAcquistoes() {
        return entityManager().createQuery("SELECT COUNT(o) FROM RichiestaAcquisto o", Long.class).getSingleResult();
    }
    
    public static List<RichiestaAcquisto> RichiestaAcquisto.findAllRichiestaAcquistoes() {
        return entityManager().createQuery("SELECT o FROM RichiestaAcquisto o", RichiestaAcquisto.class).getResultList();
    }
    
    public static RichiestaAcquisto RichiestaAcquisto.findRichiestaAcquisto(Long id) {
        if (id == null) return null;
        return entityManager().find(RichiestaAcquisto.class, id);
    }
    
    public static List<RichiestaAcquisto> RichiestaAcquisto.findRichiestaAcquistoEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM RichiestaAcquisto o", RichiestaAcquisto.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public RichiestaAcquisto RichiestaAcquisto.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        RichiestaAcquisto merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
